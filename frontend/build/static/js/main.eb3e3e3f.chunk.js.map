{"version":3,"sources":["Socket.js","styled/Lib.js","styled/HomeMenuStyles.js","components/Home/HomeMenu.js","views/Home.js","views/Loading.js","styled/LobbyMenuStyles.js","components/Lobby/PlayerContainer.js","components/Lobby/SettingsContainer.js","views/Lobby.js","components/Game/Timer.js","styled/GameStyles.js","components/Game/PlayerRole.js","components/Game/DrawingTask.js","components/Game/NumbersTask.js","components/Game/QuestionTask.js","components/Game/EndGame.js","components/Game/PlayerVoteCard.js","components/Game/Vote.js","components/Game/FinalVote.js","views/Game.js","containers/ErrorBoundary.js","containers/GameWrapper.js","dev/Debug.js","Utilities.js","containers/Root.js","App.js","index.js","Views.js","Events.js"],"names":["socket","io","buttonStyles","css","Button","styled","button","Container","div","Centered","Heading","h1","Underline","HomeMenuContainer","MenuInput","input","MenuLinkButton","Link","HomeMenu","useState","playerName","setPlayerName","roomCode","setRoomCode","type","name","placeholder","autoComplete","value","onChange","e","target","to","pathname","state","Home","Component","Loading","console","log","LobbyMenuContainer","LobbyMenuDisplay","SettingsContainerStyles","SettingOption","PlayersContainerStyles","PlayerCard","props","host","StartButton","PlayerContainer","namesList","players","map","playerObj","socketId","SettingsContainer","this","settings","numImposters","handleSettingsChange","disabled","isHost","numTasks","numRounds","Lobby","emitStartGame","emit","START_GAME","gameState","currPlayer","onClick","countDownAnimation","keyframes","Bar","timer","Timer","TaskContainer","TaskPrompt","h2","PlayerRoleName","h3","PlayerRoleReveal","imposter","NumberButton","selected","DrawingCanvas","CanvasDraw","PlayerVoteCardContainer","PlayerVoteCardStyles","voted","half","PlayerVoteName","PlayerVoteAnswer","ImposterResultContainer","ImposterResultCard","hidden","votedOff","ScoreTable","table","ScoreTableData","td","ScoreTableRow","tr","PlayerRole","role","DrawingTask","prompt","brushSettings","drawingCanvas","useRef","useEffect","canvas","current","responseObj","answer","getSaveData","task","DRAWING_TASK","SEND_ANSWER","currQuestion","modified","original","ref","hideGrid","brushRadius","lazyRadius","undo","NumbersTask","setAnswer","answerRef","NUMBERS_TASK","buttons","i","b","push","QuestionTask","EndGame","setPlayers","imposters","setImposters","once","SHOW_RESULTS","playerScores","sort","a","finalVotes","allPlayers","forEach","p","delay","ms","Promise","res","setTimeout","prevImposters","newImposters","length","showImposters","imposterCards","imp","roundTableHeaders","scores","totalPoints","roundScores","score","tableRow","PlayerVoteCard","canvasSettings","content","style","border","hideInterface","saveData","canvasWidth","canvasHeight","QUESTION_TASK","key","Vote","receivedRes","setReceivedRes","responses","setResponses","voteArr","setVoteArr","voteArrRef","SHOW_ANSWERS","SEND_VOTES","id","off","castVote","newVoteArr","currentTarget","dataset","vote","shift","playerVoteCards","data-vote","includes","crewmatePrompt","undefined","FinalVote","Game","view","playerRole","numberTask","drawingTask","questionTask","waiting","finalVote","endGame","on","SWITCH_SCREEN","nextView","question","timestamp","setState","prevState","newViews","Object","assign","keys","viewName","Date","now","ErrorBoundary","hasError","children","error","GameWrapper","SUBMIT_LOBBY_SETTINGS","lobbySettingsInit","setPlayerState","find","socketObj","updateSettingState","LOBBY_EXISTS","exists","lobbyExists","GET_PLAYER_LIST","UPDATE_PLAYER_LIST","GET_LOBBY_SETTINGS","UPDATE_LOBBY_SETTINGS","gameStarted","END_GAME","LEAVE_LOBBY","Debug","generateRoomCode","CHARACTERS","charAt","Math","floor","random","Root","preventError","formData","alert","joinLobby","emitSignal","verifyProps","window","location","exact","path","component","HomeScreen","render","routeProps","CREATE_AND_JOIN_LOBBY","JOIN_LOBBY","App","ReactDOM","StrictMode","document","getElementById","module","exports","PLAYER_ROLE","VOTE","FINAL_VOTE","ENDGAME","IO_DISCONNECT","IO_DISCONNECTING","PICK_IMPOSTERS","GET_IMPOSTERS","PICK_RANDOM_TASK"],"mappings":"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","file":"static/js/main.eb3e3e3f.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\nconst ENDPOINT = \"https://imposter-backend.herokuapp.com/\";\r\n// const ENDPOINT = \"localhost:5000\";\r\nconst socket = io(ENDPOINT);\r\nexport default socket;","import styled, { css } from \"styled-components\";\r\n\r\nexport const buttonStyles = css`\r\n\tbackground: #4c4c4c;\r\n\tcolor: #fff;\r\n\tbox-shadow: 0 3px 0 #333333;\r\n\tborder-radius: 20em;\r\n\r\n\tmax-width: 200px;\r\n\r\n\t&:hover {\r\n\t\tbackground: #747373;\r\n\t}\r\n\t&:active,\r\n\t&:focus {\r\n\t\tbackground: #444444;\r\n\t}\r\n\r\n\t//-------\r\n\tborder: 2px solid transparent;\r\n\tbox-sizing: border-box;\r\n\tcursor: pointer;\r\n\tfont-size: 1rem;\r\n\tfont-weight: 700;\r\n\tline-height: 1;\r\n\tmargin: 7px;\r\n\tpadding: 15px 25px;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\tdisplay: inline-block;\r\n\toutline: none;\r\n\tposition: relative;\r\n\ttop: 0;\r\n\ttext-shadow: 0 1px 1px rgba(0, 0, 0, 0.5);\r\n\t-webkit-transition: all 0.2s ease-in-out 0s;\r\n\t-moz-transition: all 0.2s ease-in-out 0s;\r\n\t-ms-transition: all 0.2s ease-in-out 0s;\r\n\ttransition: all 0.2s ease-in-out 0s;\r\n\r\n`;\r\n\r\nexport const Button = styled.button(buttonStyles);\r\n\r\nexport const Container = styled.div`\r\n\tpadding: 0 30px;\r\n\tmargin-right: auto;\r\n\tmargin-left: auto;\r\n\t\r\n`;\r\nexport const Centered = styled.div`\r\n  \r\n\tmin-height: 90vh;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\r\n`;\r\nexport const Heading = styled.h1`\r\n\ttext-align: center;\r\n\tfont-family: 'Bitmap';\r\n\t\r\n`;\r\n\r\n\r\n/*\r\n\tLobby.js\r\n\r\n*/\r\n\r\nexport const LobbyMenu = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const SettingsContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\r\n`;\r\n\r\nexport const Underline = styled.div`\r\n\ttext-decoration: underline;\r\n`;","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { buttonStyles } from './Lib';\r\n \r\nexport const HomeMenuContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 490px;\r\n    margin: 0 auto;\r\n    background: rgba(50, 50, 50, 0.5);\r\n    border-radius: 10px;\r\n    padding: 2em;\r\n    `;\r\nexport const MenuInput = styled.input `\r\n    padding: 10px 12px;\r\n    margin: 3px;\r\n    border: 2px solid #fff;\r\n    background-color: #000;\r\n    border-radius: 4px;\r\n    color: white;\r\n    font-size: 1.15rem;\r\n\r\n    &:focus{\r\n        outline: none\r\n    }\r\n`;\r\nexport const MenuLinkButton = styled(Link)(buttonStyles);\r\n","import React, { useState } from 'react'\r\nimport { HomeMenuContainer, MenuInput, MenuLinkButton } from '../../styled/HomeMenuStyles';\r\n\r\n\r\n\r\nfunction HomeMenu() {\r\n\r\n    const [playerName, setPlayerName] = useState('');\r\n    const [roomCode, setRoomCode] = useState('');\r\n\r\n    return (\r\n        <HomeMenuContainer>\r\n            <MenuInput\r\n                type=\"text\" name=\"playerName\" placeholder=\"Name\"autoComplete=\"off\"\r\n                value={playerName}\r\n                onChange={e => setPlayerName(e.target.value)}\r\n            />\r\n            <MenuInput \r\n                type=\"text\" name=\"roomCode\" placeholder=\"Room Code\" autoComplete=\"off\"\r\n                value={roomCode}\r\n                onChange={e => setRoomCode(e.target.value)}\r\n            />\r\n            \r\n            <MenuLinkButton\r\n                to={{\r\n                    pathname: \"/game/new\",\r\n                    state: {\r\n                        playerName: playerName,\r\n                    },\r\n                }}\r\n            >\r\n                Create new Lobby\r\n            </MenuLinkButton>\r\n\r\n            <MenuLinkButton\r\n                to={{\r\n                    pathname: `/game/${roomCode}/join`,\r\n                    state:{\r\n                        playerName: playerName,\r\n                        roomCode: roomCode\r\n                    }\r\n                }}\r\n            >    \r\n                Join Lobby\r\n            </MenuLinkButton>\r\n        </HomeMenuContainer>\r\n    )\r\n}\r\n\r\nexport default HomeMenu\r\n","import React, { Component } from \"react\";\r\nimport { \r\n\tHeading, \r\n\tContainer,\r\n} from \"../styled/Lib\";\r\n\r\nimport HomeMenu from '../components/Home/HomeMenu';\r\n\r\nexport class Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Heading> Imposter.io </Heading>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<HomeMenu />\r\n\t\t\t\t</Container>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nfunction Loading() {\r\n\r\n    console.log(\"LODAING MOUNTING\")\r\n    return (\r\n        <div>\r\n            <h1>Loading...</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import styled from 'styled-components';\r\nexport const LobbyMenuContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    align-items: center;\r\n    \r\n`;\r\n\r\nexport const LobbyMenuDisplay = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    /* margin: 0 100px; */\r\n`;\r\n\r\nexport const SettingsContainerStyles = styled.div`\r\n    /* border: 1px solid #000; */\r\n    padding: 10px;\r\n    background-color: #c5c5c5;\r\n    margin: 0 10px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const SettingOption = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    background: #333;\r\n    padding: 10px;\r\n    color:white;\r\n    \r\n`;\r\n\r\nexport const PlayersContainerStyles = styled.div`\r\n    /* border: 1px solid #000; */\r\n    background: #d5d4d4;\r\n    padding: 10px;\r\n    margin: 0 10px;\r\n    min-width: 140px;\r\n    border-radius: 5px;\r\n\r\n`;\r\n\r\n\r\n\r\nexport const PlayerCard = styled.div`\r\n    color: ${props => props.host ? \"red\" : \"black\"};\r\n    padding: 5px 8px;\r\n    border: 1px solid #000;\r\n    border-radius: 10px;\r\n    font-size: 18px;\r\n    margin: 3px;\r\n`;\r\n\r\nexport const StartButton = styled.button`\r\n// STUFF TO CHANGE ---- if we want to use props\r\n    background: #4c4c4c;\r\n    color: #fff;\r\n    box-shadow: 0 3px 0 #333333;\r\n    border-radius: 20em;\r\n\r\n    max-width: 200px;\r\n    \r\n\r\n    &:hover {\r\n        background: #747373;\r\n    }\r\n    &:active,\r\n    &:focus {\r\n        background: #444444;\r\n    }\r\n\r\n    //-------\r\n    border: 2px solid transparent;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n    margin: 7px;\r\n    padding: 15px 25px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    outline: none;\r\n    position: relative;\r\n    top: 0;\r\n    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.5);\r\n    -webkit-transition: all 0.2s ease-in-out 0s;\r\n    -moz-transition: all 0.2s ease-in-out 0s;\r\n    -ms-transition: all 0.2s ease-in-out 0s;\r\n    transition: all 0.2s ease-in-out 0s;\r\n`;\r\n","import React from 'react'\r\nimport { PlayersContainerStyles, PlayerCard }  from '../../styled/LobbyMenuStyles'\r\nfunction PlayerContainer(props) {\r\n\r\n    const namesList = props.players.map(playerObj => {\r\n        return <PlayerCard key={playerObj.socketId} host={playerObj.host}>{playerObj.playerName}</PlayerCard>\r\n    });\r\n    return (\r\n        <PlayersContainerStyles>\r\n            \r\n            {namesList}\r\n        </PlayersContainerStyles>\r\n    )\r\n}\r\n\r\nexport default PlayerContainer\r\n","import React, { Component } from 'react'\r\nimport { SettingsContainerStyles, SettingOption } from '../../styled/LobbyMenuStyles';\r\nexport class SettingsContainer extends Component {\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <SettingsContainerStyles>\r\n                <h2>Room Code: {this.props.roomCode}</h2>\r\n                \r\n                <SettingOption>\r\n                    <label>Num Imposters</label>\r\n                    <select \r\n                        name='numImposters' \r\n                        value={this.props.settings.numImposters} \r\n                        onChange={e=>this.props.handleSettingsChange(e)}\r\n                        disabled={!this.props.isHost}\r\n                    >\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                    </select>\r\n                </SettingOption>\r\n                <SettingOption>\r\n                    <label>Num Tasks</label>\r\n                    <select \r\n                        name='numTasks'\r\n                        value={this.props.settings.numTasks} \r\n                        onChange={e=>this.props.handleSettingsChange(e)}\r\n                        disabled={!this.props.isHost}\r\n                    >\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                </SettingOption>\r\n                <SettingOption>\r\n                    <label>Num Rounds</label>\r\n                    <select \r\n                        name='numRounds' \r\n                        value={this.props.settings.numRounds} \r\n                        onChange={e=>this.props.handleSettingsChange(e)}\r\n                        disabled={!this.props.isHost}\r\n                    >\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                </SettingOption>\r\n\r\n            </SettingsContainerStyles>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsContainer\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport socket from '../../Socket';\r\nimport { GET_LOBBY_SETTINGS, UPDATE_LOBBY_SETTINGS } from '../../Events';  \r\nfunction SettingsContainer(props) {\r\n\r\n    const [settings, setSettings] = useState({\r\n        numImposters: 1,\r\n        numTasks: 3,\r\n        numRounds: 3\r\n    });\r\n    console.log(\"SettingsContainer Mounted\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [settings]);\r\n   \r\n\r\n\r\n\r\n    const handleSettingsChange = (e) => {\r\n        setSettings(prevSettings => ({\r\n            ...prevSettings,\r\n            [e.target.name]:  e.target.value\r\n        }));\r\n    }\r\n    return (\r\n\r\n    )\r\n        \r\n\r\n}\r\n\r\nexport default SettingsContainer\r\n*/","import React, { Component } from \"react\";\r\nimport socket from \"../Socket\";\r\n\r\nimport {\r\n\r\n\tSTART_GAME,\r\n\r\n} from \"../Events\";\r\n\r\nimport { Container, Heading } from \"../styled/Lib\";\r\nimport PlayerContainer from \"../components/Lobby/PlayerContainer\";\r\nimport SettingsContainer from \"../components/Lobby/SettingsContainer\";\r\nimport { LobbyMenuContainer, LobbyMenuDisplay, StartButton } from \"../styled/LobbyMenuStyles\";\r\n\r\n\r\nexport class Lobby extends Component {\r\n\t\r\n\r\n\r\n\temitStartGame = () => {\r\n\t\tsocket.emit(START_GAME, this.props.roomCode);\r\n\t};\r\n\r\n\trender() {\r\n\r\n\t\tconst { currPlayer, players, settings } = this.props.gameState;\r\n\t\tconst isHost = currPlayer === null ? false : currPlayer.host;\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Heading>Imposter.io</Heading>\r\n\t\t\t\t<LobbyMenuContainer>\r\n\t\t\t\t\t<LobbyMenuDisplay>\r\n\t\t\t\t\t\t<SettingsContainer\r\n\t\t\t\t\t\t\troomCode={this.props.roomCode}\r\n\t\t\t\t\t\t\tisHost={isHost}\r\n\t\t\t\t\t\t\tsettings={settings}\r\n\t\t\t\t\t\t\thandleSettingsChange={this.props.handleSettingsChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PlayerContainer\r\n\t\t\t\t\t\t\troomCode={this.props.roomCode}\r\n\t\t\t\t\t\t\tcurrPlayer={currPlayer}\r\n\t\t\t\t\t\t\tplayers={players}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</LobbyMenuDisplay>\r\n\r\n\t\t\t\t<StartButton\r\n\t\t\t\t\tonClick={this.emitStartGame}\r\n\t\t\t\t\tdisabled={!isHost}\r\n\t\t\t\t>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t</StartButton>\r\n\r\n\t\t\t\t</LobbyMenuContainer>\r\n\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Lobby;\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components';\r\n \r\n\r\nconst countDownAnimation = keyframes`\r\n    to {\r\n        transform: scaleX(0);\r\n    }\r\n`;\r\nconst Bar = styled.div`\r\n        \r\n    height: 25px;\r\n    width: 100%;\r\n    background: linear-gradient(to bottom, red, #900);\r\n\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n\r\n    animation-name: ${countDownAnimation};\r\n    animation-duration: ${props => props.timer}ms;\r\n    animation-timing-function: linear;\r\n    animation-iteration-count: 1;\r\n    transform-origin: left center;\r\n    animation-fill-mode: forwards;\r\n`\r\nfunction Timer(props) {\r\n    console.log(props.timer);\r\n    return (\r\n        <Bar  timer={props.timer}/>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import styled from 'styled-components';\r\nimport CanvasDraw from 'react-canvas-draw';\r\n\r\n\r\nexport const TaskContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\nexport const TaskPrompt = styled.h2`\r\n    font-family: \"Bitmap\";\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    color: black;\r\n\r\n`;\r\n\r\n// Player Role View\r\nexport const PlayerRoleName = styled.h3`\r\n    font-family: \"Bitmap\";\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    color: black;\r\n\r\n`;\r\n\r\nexport const PlayerRoleReveal = styled.h1`\r\n    text-align: center;\r\n    font-family: \"Bitmap\";\r\n    font-size: 5rem;\r\n    color: ${props => props.imposter ? '#cf1d1d' : '#31dec1'};\r\n    text-shadow: 3px 3px 50px ${props=>props.imposter ? '#cf1d1d' : '#31dec1' };\r\n    \r\n\r\n`;\r\n\r\n// Number Task View\r\n\r\n\r\n\r\nexport const NumberButton = styled.button` \r\n    background-color: ${props => props.selected  ? '#44a133' : '#505050'}; /* Green */\r\n    font-family: \"Bitmap\";\r\n    border: none;\r\n    color: white;\r\n    width: 60px;\r\n    height: 60px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n`;\r\n\r\n//Drwaing Task\r\n\r\n\r\nexport const DrawingTaskContainer = styled.div`\r\n    display: flex;\r\n    align\r\n\r\n`;\r\nexport const DrawingCanvas = styled(CanvasDraw)`\r\n    border: 1px solid #272727;\r\n    margin: 0 auto;\r\n`\r\n\r\n\r\n\r\n\r\n// Vote View\r\n\r\nexport const PlayerVoteCardContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 50px;\r\n`;\r\n\r\nexport const PlayerVoteCardStyles = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background-color: ${props => props.voted ? '#44a133' : '#505050' };\r\n    padding: 6px;\r\n    margin: 5px;\r\n    min-width: 110px;\r\n    min-height: ${props => props.half ? \"55px\" : \"110px\"};\r\n    \r\n  \r\n    \r\n    border-radius: 10px;\r\n    &:hover{\r\n        background-color: \"#8af078\";\r\n        cursor: ${props => props.disabled ?  \"default\" : \"pointer\"};\r\n    }\r\n`;\r\n\r\nexport const PlayerVoteName = styled.div`\r\n    font-family: \"Bitmap\";\r\n    font-size: 1.5rem;\r\n    margin: 8px;\r\n    text-align: center;\r\n    color: white;\r\n`;\r\n\r\nexport const PlayerVoteAnswer = styled.div`\r\n    font-family: \"Bitmap\";\r\n    text-decoration: underline;\r\n    padding: 3px;\r\n    color: white;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n\r\n`;\r\n\r\n//EndGame\r\n\r\nexport const ImposterResultContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n\r\n`\r\n\r\nexport const ImposterResultCard = styled.div`\r\n    display: ${props => props.hidden ? \"hidden\" : \"block\"};\r\n    text-decoration: ${props => props.votedOff ? \"line-through\" : \"none\"};\r\n    font-size: 1.8rem;\r\n    font-family: \"Bitmap\";\r\n    text-align: center;\r\n    padding: 5px 10px;\r\n    margin: 0 10px;\r\n    color: #cf1d1d;\r\n    text-shadow: 10px 10px 50px #cf1d1d;\r\n\r\n`;\r\n\r\n\r\nexport const ScoreTable = styled.table`\r\n    border: 1px solid black;\r\n    border-collapse: collapse;\r\n    font-family: \"Bitmap\";\r\n`;\r\n\r\nexport const ScoreTableData = styled.td`\r\n    border: 1px solid black;\r\n    padding: 10px 20px;\r\n`;\r\nexport const ScoreTableRow = styled.tr`\r\n    border: 1px solid black;\r\n`;","import React  from 'react';\r\nimport Timer from './Timer';\r\nimport { PlayerRoleName, PlayerRoleReveal } from '../../styled/GameStyles'\r\n\r\n\r\nfunction PlayerRole(props) {\r\n\r\n   \r\n    let role = '';\r\n    if (props.gameState.currPlayer !== null) {\r\n        role =  props.gameState.currPlayer.imposter ? 'IMPOSTER' : 'CREWMATE'\r\n    }\r\n    return (\r\n        <>\r\n        \r\n        <PlayerRoleName>{props.gameState.currPlayer.playerName}</PlayerRoleName>\r\n        <PlayerRoleReveal imposter={props.gameState.currPlayer.imposter}>{role}</ PlayerRoleReveal>\r\n            \r\n        \r\n        <Timer timer={props.timer} />\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default PlayerRole\r\n","import React,  { useEffect, useRef } from 'react'\r\nimport Timer from './Timer';\r\nimport socket from '../../Socket';\r\nimport { SEND_ANSWER } from '../../Events';\r\n\r\nimport { DRAWING_TASK } from '../../Views';\r\nimport { DrawingCanvas, TaskContainer } from '../../styled/GameStyles'\r\nimport {FaUndo} from 'react-icons/fa'; \r\nimport { TaskPrompt } from '../../styled/GameStyles';\r\nimport { Button } from '../../styled/Lib';\r\nfunction DrawingTask(props) {\r\n    const brushSettings =  {\r\n        color: \"#ffc600\",\r\n        width: 400,\r\n        height: 400,\r\n        brushRadius: 2,\r\n        lazyRadius: 0,\r\n    }\r\n\r\n    let drawingCanvas = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const canvas = drawingCanvas.current\r\n        return () => {\r\n            let responseObj = {\r\n                answer: canvas.getSaveData(),\r\n                currPlayer: props.gameState.currPlayer,\r\n                task: DRAWING_TASK\r\n            }\r\n            \r\n            socket.emit(SEND_ANSWER, props.roomCode, responseObj);\r\n        }\r\n    }, [props.gameState.currPlayer, props.roomCode]);\r\n    \r\n\r\n    let prompt;\r\n    if (props.currQuestion !== null){\r\n\r\n        if(props.gameState.currPlayer.imposter) {\r\n            prompt = props.currQuestion.modified\r\n        } else{\r\n            prompt = props.currQuestion.original;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <TaskContainer>\r\n            <TaskPrompt>{prompt}</TaskPrompt>\r\n\r\n            <DrawingCanvas\r\n                ref = {drawingCanvas}\r\n                hideGrid\r\n                brushRadius={brushSettings.brushRadius}\r\n                lazyRadius={brushSettings.lazyRadius}\r\n            />\r\n            \r\n\r\n            <Button onClick={()=> drawingCanvas.current.undo()}>\r\n                <FaUndo />\r\n            </Button>\r\n     \r\n        </TaskContainer>\r\n        \r\n        <Timer timer={props.timer}/>\r\n        </>\r\n     \r\n    )\r\n}\r\n\r\nexport default DrawingTask\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n    SEND_ANSWER,\r\n} from '../../Events';\r\nimport { NUMBERS_TASK } from '../../Views'\r\nimport socket from '../../Socket';\r\n\r\nimport { TaskContainer, TaskPrompt, NumberButton } from '../../styled/GameStyles';\r\n\r\n\r\nfunction NumbersTask(props) {\r\n    const [answer, setAnswer] = useState(5);\r\n    const answerRef = useRef(answer);\r\n\r\n    useEffect(() => {\r\n        answerRef.current = answer;\r\n    }, [answer]);\r\n    \r\n    useEffect(() => {\r\n        return (() => {\r\n            let responseObj = {\r\n                answer: answerRef.current,\r\n                currPlayer: props.gameState.currPlayer,\r\n                task: NUMBERS_TASK,\r\n            }\r\n            // let responseObj = Object.assign({answer: answerRef.current}, props.gameState.currPlayer);\r\n            socket.emit(SEND_ANSWER, props.roomCode, responseObj);\r\n        });\r\n    }, [props.gameState.currPlayer, props.roomCode]);\r\n\r\n\r\n    let buttons = [];\r\n    for(let i = 1; i <= 10; i++){\r\n        const b = <NumberButton key={i} onClick={()=>setAnswer(i)} selected={answer===i}>{i}</NumberButton>\r\n        buttons.push(b);\r\n    }\r\n\r\n    let prompt;\r\n    if (props.currQuestion !== null){\r\n        if(props.gameState.currPlayer.imposter) {\r\n            prompt = 'You are the imposter, pick a number and DEFEND YOUR SELF'\r\n        } else{\r\n            prompt = props.currQuestion;\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        \r\n        <TaskContainer>\r\n            <TaskPrompt>{prompt}</TaskPrompt>\r\n            <div>{ buttons }</div>\r\n        </TaskContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default NumbersTask\r\n","import React from 'react'\r\n\r\n\r\nfunction QuestionTask(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            Quesiton Task\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionTask\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { SHOW_RESULTS } from \"../../Events\";\r\nimport { Container, Heading } from \"../../styled/Lib\";\r\nimport Timer from './Timer'\r\n\r\nimport {\r\n\tImposterResultCard,\r\n    ImposterResultContainer,\r\n    ScoreTable,\r\n    ScoreTableRow,\r\n    ScoreTableData,\r\n} from \"../../styled/GameStyles\";\r\nimport socket from \"../../Socket\";\r\nfunction EndGame(props) {\r\n\tconst [players, setPlayers] = useState([]);\r\n\tconst [imposters, setImposters] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.once(SHOW_RESULTS, (playerScores) => {\r\n            playerScores.sort((a, b) =>\r\n                a.finalVotes > b.finalVotes ? -1 : 1\r\n            );\r\n            let players = [],\r\n                imposters = [],\r\n                allPlayers = [];\r\n            playerScores.forEach((p, i) => {\r\n                if (i < props.gameState.settings.numImposters) {\r\n                    p.votedOff = true;\r\n                } else {\r\n                    p.votedOff = false;\r\n                }\r\n                p.hidden = true;\r\n                allPlayers.push(p);\r\n                if (p.imposter) {\r\n                    imposters.push(p);\r\n                } else {\r\n                    players.push(p);\r\n                }\r\n            });\r\n\r\n            setPlayers(players);\r\n            setImposters(imposters);\r\n\r\n            const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n            const showImposters = async () => {\r\n                for (let i = 0; i < imposters.length; i++) {\r\n                    await delay(2000);\r\n                    setImposters((prevImposters) => {\r\n                        let newImposters = [...prevImposters];\r\n                        newImposters[i] = {\r\n                            ...newImposters[i],\r\n                            hidden: false,\r\n                        };\r\n                        return newImposters;\r\n                    });\r\n                }\r\n            };\r\n            showImposters();\r\n        });\r\n\t}, [props.gameState.settings.numImposters]);\r\n\r\n\tconst imposterCards = imposters.map((imp) => {\r\n\t\treturn (\r\n\t\t\t<span key={imp.socketId}>\r\n\t\t\t\t<ImposterResultCard hidden={imp.hidden} votedOff={imp.votedOff}>\r\n\t\t\t\t\t{imp.playerName}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{imp.finalVotes} Votes\r\n\t\t\t\t</ImposterResultCard>\r\n\t\t\t</span>\r\n\t\t);\r\n    });\r\n    \r\n    const roundTableHeaders = [];\r\n    roundTableHeaders.push(<ScoreTableData>Player</ScoreTableData>)\r\n    roundTableHeaders.push(<ScoreTableData># of Votes</ScoreTableData>)\r\n    for (let i = 1; i <= props.gameState.settings.numTasks; i++){\r\n        roundTableHeaders.push(<ScoreTableData>Round {i}</ScoreTableData>);\r\n    }\r\n    roundTableHeaders.push(<ScoreTableData>Final Vote</ScoreTableData>)\r\n    roundTableHeaders.push(<ScoreTableData>Total</ScoreTableData>);\r\n\r\n\r\n\tconst scores = players.map((playerObj) => {\r\n\r\n        let totalPoints = 0;\r\n\t\tconst roundScores = playerObj.score.map((score, i) => {\r\n            totalPoints += score;\r\n            return (\r\n\t\t\t    <ScoreTableData key={`${playerObj.socketId}-score-${i}`}>{score}</ScoreTableData>\r\n            )\r\n        }); \r\n\r\n        const tableRow = [\r\n            <ScoreTableData key={playerObj.socketId}>{playerObj.playerName}</ScoreTableData>,\r\n            <ScoreTableData key={`${playerObj.socketId}-votes`}>{playerObj.finalVotes} Votes</ScoreTableData>,\r\n            ...roundScores,\r\n            <ScoreTableData key={`${playerObj.socketId}-finalScore`}>{totalPoints}</ScoreTableData>\r\n        ];\r\n\r\n\t\treturn (\r\n\t\t\t<ScoreTableRow key={playerObj.socketId}>\r\n\t\t\t\t{tableRow}\r\n\t\t\t</ScoreTableRow>\r\n\t\t);\r\n    });\r\n    \r\n\treturn (\r\n        \r\n\t\t<Container>\r\n\t\t\t<Heading>Results</Heading>\r\n\t\t\t<Heading>Imposters</Heading>\r\n\t\t\t<ImposterResultContainer>{imposterCards}</ImposterResultContainer>\r\n\t\t\t<Heading>Scores</Heading>\r\n\t\t\t<ScoreTable>\r\n                <thead>\r\n                    {roundTableHeaders}\r\n                </thead>\r\n                <tbody>\r\n                    {scores}\r\n                </tbody>\r\n                \r\n            </ScoreTable>\r\n            <Timer timer={props.timer} />\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default EndGame;\r\n","import React from 'react'\r\nimport { PlayerVoteCardStyles, PlayerVoteName, PlayerVoteAnswer } from '../../styled/GameStyles';\r\nimport CanvasDraw from 'react-canvas-draw';\r\nimport {\r\n    DRAWING_TASK,\r\n    QUESTION_TASK,\r\n    NUMBERS_TASK,\r\n} from '../../Views';\r\n\r\nfunction PlayerVoteCard(props) {\r\n    const canvasSettings =  {\r\n        width: 120,\r\n        height: 120,\r\n    }\r\n\r\n    \r\n    let content = null;\r\n    if (props.content.task === DRAWING_TASK){\r\n        content = <CanvasDraw \r\n                style={{\r\n                    border: \"1px solid #272727\"\r\n                }}\r\n                hideInterface\r\n                hideGrid\r\n                disabled\r\n                saveData = {props.content.answer}\r\n                canvasWidth={canvasSettings.width}\r\n                canvasHeight={canvasSettings.height}\r\n                brushRadius={0}\r\n                lazyRadius={0}\r\n\r\n            />\r\n    } else if (props.content.task === QUESTION_TASK || props.content.task === NUMBERS_TASK) {\r\n        content = <PlayerVoteAnswer>{props.content.answer}</PlayerVoteAnswer>\r\n    } \r\n    \r\n    if (content === null){\r\n        return (\r\n            <PlayerVoteCardStyles key={props.key} voted={props.voted} disabled={props.disabled} half>\r\n                <PlayerVoteName>{props.content.playerName}</PlayerVoteName> \r\n            </PlayerVoteCardStyles>\r\n        )\r\n    } else {\r\n        return (\r\n            <PlayerVoteCardStyles key={props.key} voted={props.voted} disabled={props.disabled}>\r\n                <PlayerVoteName>{props.content.playerName}</PlayerVoteName> \r\n                {content}\r\n            </PlayerVoteCardStyles>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerVoteCard\r\n","\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Loading from '../../views/Loading';\r\nimport socket from '../../Socket';\r\nimport { PlayerVoteCardContainer } from '../../styled/GameStyles';\r\nimport  PlayerVoteCard  from './PlayerVoteCard';\r\nimport { Container, Heading, Underline  } from '../../styled/Lib';\r\nimport Timer from './Timer';\r\n\r\nimport {\r\n    SHOW_ANSWERS,\r\n    SEND_VOTES\r\n} from '../../Events';\r\nfunction Vote(props) {\r\n\r\n    const [receivedRes, setReceivedRes] = useState(false);\r\n    const [responses, setResponses] = useState([]);\r\n    const [voteArr, setVoteArr] = useState([]);\r\n    const voteArrRef = useRef(voteArr);\r\n    \r\n\r\n    useEffect(() => {\r\n        socket.once(SHOW_ANSWERS, (res) =>{\r\n            setReceivedRes(true);\r\n            setResponses(res);\r\n        });\r\n        return () => {\r\n            socket.emit(SEND_VOTES, props.roomCode, socket.id, voteArrRef.current, 50, false);\r\n            socket.off(SHOW_ANSWERS);\r\n        }\r\n    }, [props.roomCode]);\r\n\r\n    useEffect(() => {\r\n        voteArrRef.current = voteArr;\r\n    }, [voteArr]);\r\n\r\n \r\n    \r\n    let castVote = (e) => {\r\n        \r\n        if (props.gameState.currPlayer.imposter){\r\n            return;\r\n        }\r\n        let newVoteArr = [...voteArr];\r\n        newVoteArr.push(e.currentTarget.dataset.vote)\r\n        \r\n        if (newVoteArr.length > props.gameState.settings.numImposters){\r\n            newVoteArr.shift()  \r\n        }\r\n        voteArrRef.current = newVoteArr;\r\n     \r\n        setVoteArr(newVoteArr);\r\n    }\r\n\r\n   \r\n    const playerVoteCards =  responses.map(e => {\r\n        \r\n        const content = {\r\n            playerName: e.currPlayer.playerName,\r\n            answer: e.answer,\r\n            task: e.task,\r\n        }\r\n      \r\n        return (      \r\n            <span key={e.currPlayer.socketId}  data-vote={e.currPlayer.socketId} onClick={castVote} >\r\n                <PlayerVoteCard \r\n                    voted={voteArr.includes(e.currPlayer.socketId)} \r\n                    content={content}\r\n                    disabled={props.gameState.currPlayer.imposter}\r\n                />\r\n            </span>\r\n        )\r\n    });\r\n    \r\n\r\n    let crewmatePrompt = '';\r\n    \r\n    if (props.currQuestion !== null) {\r\n        crewmatePrompt = props.currQuestion.original === undefined ? props.currQuestion : props.currQuestion.original;\r\n    } \r\n    if (receivedRes) {\r\n        return (\r\n            <>\r\n            <Container>\r\n                <Heading><Underline>Crewmate Prompt</Underline></Heading>\r\n                <Heading>{crewmatePrompt}</Heading>\r\n                <PlayerVoteCardContainer>\r\n                    {playerVoteCards}\r\n                </PlayerVoteCardContainer>\r\n            </Container>\r\n            <Timer timer={props.timer}/>\r\n            </>\r\n            \r\n        ) \r\n        \r\n    }\r\n    \r\n    return <Loading /> ;\r\n}\r\n\r\nexport default Vote\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Timer from './Timer';\r\nimport socket from '../../Socket';\r\nimport { Container, Heading, Underline } from '../../styled/Lib';\r\nimport { PlayerVoteCardContainer } from '../../styled/GameStyles';\r\nimport PlayerVoteCard from './PlayerVoteCard';\r\nimport {\r\n    SEND_VOTES \r\n} from '../../Events';\r\n\r\nfunction FinalVote(props) {\r\n\r\n    const [voteArr, setVoteArr] = useState([]);\r\n    const voteArrRef = useRef(voteArr);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            \r\n            socket.emit(SEND_VOTES, props.roomCode, socket.id, voteArrRef.current, 100, true)\r\n        };\r\n    }, [props.roomCode]);\r\n\r\n    useEffect(() => {\r\n        voteArrRef.current = voteArr;\r\n    },[voteArr])\r\n    const  castVote = (e) => {\r\n        \r\n        if (props.gameState.currPlayer.imposter){\r\n            return;\r\n        }\r\n        let newVoteArr = [...voteArr];\r\n        newVoteArr.push(e.currentTarget.dataset.vote)\r\n        \r\n        if (newVoteArr.length > props.gameState.settings.numImposters){\r\n            newVoteArr.shift()  \r\n        }\r\n        voteArrRef.current = newVoteArr;\r\n     \r\n        setVoteArr(newVoteArr);\r\n    }\r\n\r\n\r\n    const players = props.gameState.players;\r\n    const playerVoteCards = players.map(e => {\r\n        const content = {\r\n            playerName: e.playerName\r\n        }\r\n\r\n        return (      \r\n            <span key={e.socketId}  data-vote={e.socketId} onClick={castVote} >\r\n                <PlayerVoteCard \r\n                    voted={voteArr.includes(e.socketId)} \r\n                    content={content}\r\n                    disabled={props.gameState.currPlayer.imposter}\r\n                />\r\n            </span>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <>\r\n        <Container>\r\n            <Heading><Underline>Final Votes</Underline></Heading>\r\n            <PlayerVoteCardContainer>\r\n                {playerVoteCards}\r\n            </PlayerVoteCardContainer>\r\n        </Container>\r\n        <Timer timer={props.timer}/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default FinalVote\r\n","import React, { Component } from \"react\";\r\nimport PlayerRole from \"../components/Game/PlayerRole\";\r\nimport DrawingTask from '../components/Game/DrawingTask';\r\nimport NumberTask from '../components/Game/NumbersTask';\r\nimport QuestionTask from \"../components/Game/QuestionTask\";\r\nimport EndGame from '../components/Game/EndGame';\r\nimport Loading from '../views/Loading'\r\nimport Vote from '../components/Game/Vote';\r\nimport FinalVote from '../components/Game/FinalVote';\r\nimport { Centered } from '../styled/Lib';\r\nimport socket from \"../Socket\";\r\n\r\nimport {\r\n\tSWITCH_SCREEN\r\n} from '../Events';\r\n\r\n\r\nexport class Game extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttimer: 3000,\r\n\t\t\tcurrQuestion: null,\r\n\t\t\tview: {\r\n\t\t\t\tplayerRole: true,\r\n\t\t\t\r\n\r\n\t\t\t\tnumberTask: false,\r\n\t\t\t\tdrawingTask: false,\r\n\t\t\t\tquestionTask: false,\r\n\t\r\n\t\t\t\twaiting: false,\r\n\t\r\n\t\r\n\t\t\t\tvote: false,\r\n\t\t\t\tfinalVote: false,\r\n\t\r\n\t\t\t\tendGame: false,\r\n\t\t\t}\r\n\r\n\t\t\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tsocket.on(SWITCH_SCREEN, (nextView, question, timestamp) => {\r\n\t\t\t\r\n\t\r\n\t\t\tthis.setState(prevState =>{\r\n\t\t\t\t\r\n\t\t\t\tlet newViews = Object.assign({}, prevState.view);\r\n\t\t\t\tObject.keys(newViews).forEach(viewName => newViews[viewName] = false);\r\n\t\t\t\tnewViews[nextView] = true;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttimer: timestamp - Date.now(),\r\n\t\t\t\t\tcurrQuestion: question,\r\n\t\t\t\t\tview: newViews,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\t\t\t \r\n\t\t});\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tsocket.off(SWITCH_SCREEN);\r\n\t}\r\n    \r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\tlet content = null;\r\n\t\tif (this.state.view.playerRole) {\r\n\t\t\tcontent = <PlayerRole {...this.props}  currQuestion={this.state.currQuestion} timer={this.state.timer}/>;\r\n\t\t} else if (this.state.view.numberTask) {\r\n\t\t\tcontent = <NumberTask {...this.props}  currQuestion={this.state.currQuestion} timer={this.state.timer}/>\r\n\t\t} else if (this.state.view.drawingTask) {\r\n\t\t\tcontent = <DrawingTask {...this.props}  currQuestion={this.state.currQuestion} timer={this.state.timer}/>\r\n\t\t} else if (this.state.view.questionTask) {\r\n\t\t\tcontent = <QuestionTask {...this.props}  currQuestion={this.state.currQuestion} timer={this.state.timer}/>\r\n\t\t} else if (this.state.view.vote){\r\n\t\t\tcontent = <Vote {...this.props} currQuestion={this.state.currQuestion} timer={this.state.timer}/>\r\n\t\t} else if (this.state.view.finalVote) {\r\n\t\t\tcontent = <FinalVote {...this.props} timer={this.state.timer}/>\r\n\r\n\t\t}  else if (this.state.view.endGame){\r\n\t\t\tcontent = <EndGame {...this.props} timer={this.state.timer} />\r\n\t\t}  else {\r\n\t\t\tcontent = <Loading />\r\n\t\t}\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<Centered>\r\n\t\t\t\t<div>{content}</div>\r\n\t\t\t</Centered>\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t);\r\n        // return (\r\n\t\t// <>\r\n\r\n\t\t// \t<Centered>\r\n\t\t// \t\t{content}\r\n\t\t// \t</Centered> \r\n\t\t// \t<Timer timer={this.state.timer}/>\r\n\t\t// </>\r\n\t\t// ); \r\n\t}\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router';\r\nexport class ErrorBoundary extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      return { hasError: true };\r\n    }\r\n  \r\n    render() {\r\n      \r\n      if (this.state.hasError) {\r\n        console.log('caught error')\r\n        return <Redirect to=\"/\" />\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\nexport default ErrorBoundary\r\n\r\n","import React , { Component  } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Loading from '../views/Loading';\r\nimport Lobby from '../views/Lobby';\r\nimport Game from '../views/Game';\r\nimport ErrorBoundary from '../containers/ErrorBoundary';\r\n\r\nimport socket from '../Socket';\r\n\r\nimport { LOBBY_EXISTS, \r\n    START_GAME, \r\n    LEAVE_LOBBY, \r\n    UPDATE_PLAYER_LIST, \r\n    GET_PLAYER_LIST,\r\n    GET_LOBBY_SETTINGS,\r\n    UPDATE_LOBBY_SETTINGS,\r\n    SUBMIT_LOBBY_SETTINGS,\r\n    END_GAME,\r\n} from '../Events';\r\n\r\n\r\nexport class GameWrapper extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             lobbyExists: null,\r\n             gameStarted: false,\r\n             gameState: {\r\n                 currPlayer: null,\r\n                 players: [],\r\n                 settings: {\r\n                     numImposters: 1,\r\n                     numTasks: 3,\r\n                     numRounds: 3\r\n                 },\r\n\r\n             }\r\n        }\r\n    }\r\n\r\n    handleSettingsChange = (e) => {\r\n\t\tthis.setState(\r\n\t\t\t(prevState) => ({\r\n                ...prevState,\r\n                gameState: {\r\n                    ...prevState.gameState,\r\n                    settings: {\r\n                        ...prevState.gameState.settings,\r\n                        [e.target.name]: e.target.value,\r\n                    },\r\n                }\r\n\r\n\t\t\t}),\r\n\t\t\t() => {\r\n\t\t\t\tsocket.emit(\r\n\t\t\t\t\tSUBMIT_LOBBY_SETTINGS,\r\n\t\t\t\t\tthis.props.roomCode,\r\n\t\t\t\t\tthis.state.gameState.settings\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n    lobbySettingsInit = () => {\r\n\r\n        const setPlayerState = (players) => {\r\n            const currPlayer = players.find(\r\n                (socketObj) => socketObj.socketId === socket.id\r\n            );\r\n            this.setState(prevState => ({\r\n                ...prevState, \r\n                gameState: {\r\n                    ...prevState.gameState,\r\n                    players: players,\r\n                    currPlayer: currPlayer\r\n                }\r\n            }));\r\n        }\r\n        const updateSettingState = settings => {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                gameState: {\r\n                    ...prevState.gameState,\r\n                    settings: settings\r\n                }\r\n            }));\r\n        }\r\n\r\n\r\n        socket.emit(LOBBY_EXISTS, this.props.roomCode, (exists)=>{\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                lobbyExists: exists\r\n            }), () => {\r\n                \r\n                if (!this.state.lobbyExists) return;\r\n                socket.emit(GET_PLAYER_LIST, this.props.roomCode, players => setPlayerState(players));\r\n                socket.on(UPDATE_PLAYER_LIST,  players => setPlayerState(players));\r\n                \r\n                socket.emit(GET_LOBBY_SETTINGS, this.props.roomCode, settings => updateSettingState(settings));\r\n                socket.on(UPDATE_LOBBY_SETTINGS, settings => updateSettingState(settings));\r\n                \r\n            });\r\n        });\r\n\r\n\r\n\r\n    }\r\n \r\n    componentDidMount() {\r\n        this.lobbySettingsInit();\r\n        socket.on(START_GAME, (players, settings)=> {\r\n            const currPlayer = players.find(\r\n                (socketObj) => socketObj.socketId === socket.id\r\n            );\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                gameStarted: true,\r\n                gameState: {\r\n                    ...prevState.gameState,\r\n                    currPlayer: currPlayer, \r\n                    settings: settings,\r\n                    players: players,\r\n                }\r\n            }));\r\n        });\r\n\r\n        socket.on(END_GAME, ()=> {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                gameStarted: false,\r\n            }))\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.off(START_GAME);\r\n        socket.off(END_GAME);\r\n        socket.emit(LEAVE_LOBBY, this.props.roomCode);\r\n    }\r\n    \r\n    render() {\r\n\r\n        if (this.state.gameState.currPlayer === undefined) {\r\n            console.log(\"currPlayer is undefined\");\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n\r\n        let content = null;\r\n        if (this.state.lobbyExists === null) {\r\n            content =  <Loading />\r\n        } else if (this.state.gameStarted === true){\r\n            content = <Game {...this.props} gameState={this.state.gameState}/>\r\n        } else if (this.state.lobbyExists === false) {\r\n            content =  <Redirect to='/' />\r\n        } else if (this.state.lobbyExists === true){\r\n            content =  <Lobby {...this.props} gameState={this.state.gameState} handleSettingsChange={this.handleSettingsChange} />\r\n        }\r\n        return (\r\n            <ErrorBoundary>\r\n                {content}\r\n            </ErrorBoundary>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default GameWrapper\r\n\r\n","import React from 'react'\r\nimport socket from '../Socket'\r\nfunction Debug() {\r\n\r\n    const debug = () => {\r\n      socket.emit('debug',() => {\r\n        setTimeout(console.log, 1000, \"callback\");\r\n      });\r\n      console.log(\"not call back\");\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        \r\n        <button onClick={debug}>Test Server</button>\r\n        \r\n    )\r\n}\r\n\r\nexport default Debug\r\n","export const generateRoomCode = () => {\r\n    const CHARACTER_LENGTH = 6\r\n    const CHARACTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';  \r\n    let res = '';\r\n    for (let i = 0; i < CHARACTER_LENGTH; i++){\r\n        res += CHARACTERS.charAt(Math.floor(Math.random() * CHARACTERS.length));\r\n    }\r\n    // return 'abcde';\r\n    return res;\r\n} \r\n\r\nexport const pickUniqueNumbers = (upperBound, num) => {\r\n    let arr = [...Array(upperBound).keys()];\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }  \r\n\r\n    const numToDelete = arr.length - num;\r\n    const res = arr.splice(0, num, numToDelete);\r\n    console.log(res);\r\n    return res;\r\n}\r\n\r\nexport const wait = async (ms) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\tRedirect,\r\n} from \"react-router-dom\";\r\n\r\nimport socket from \"../Socket\";\r\n\r\nimport HomeScreen from \"../views/Home\";\r\nimport GameWrapper from \"./GameWrapper\";\r\n\r\n\r\nimport Debug from \"../dev/Debug\";\r\nimport { generateRoomCode } from \"../Utilities\";\r\nimport { CREATE_AND_JOIN_LOBBY, JOIN_LOBBY } from \"../Events\";\r\n\r\n\r\n\r\n\r\nexport class Root extends Component {\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tsocket.on('disconnect', () =>  {\r\n\t\t\talert('Server disconnected! Check your net connection');\r\n\t\t\twindow.location = \"/\"; //page you want to redirect\r\n\t\t});\r\n\t}\r\n\t/*\r\n\t\t Prevent Error - If the invalid data is entered in the home Screen\r\n\t\t return True\r\n\t*/\r\n\tpreventError = (formData) => {\r\n\t\tif (formData !== undefined || formData !== null) {\r\n\t\t\tconst { playerName, roomCode } = formData; \r\n\t\t\tconst errorPlayerName = playerName === undefined || playerName === '';\r\n\t\t\tconst errorRoomCode   = roomCode   === undefined || roomCode   === '';\r\n\t\t\tif (errorPlayerName|| errorRoomCode ) {\r\n\t\t\t\talert(\"Enter a name OR Enter Valid Room Code\");\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tjoinLobby = (formData, emitSignal) => {\r\n\t\t\r\n\t\tif (this.preventError(formData)){\r\n\t\t\treturn <Redirect to='/' />\r\n\t\t}\r\n\r\n\t\tconst { roomCode, playerName } = formData;\r\n\t\tsocket.emit(emitSignal, roomCode, playerName);\r\n\r\n\t\treturn  (\r\n\t\t\t<Redirect\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: `/game/${roomCode}`,\r\n\t\t\t\t\tstate: { \r\n\t\t\t\t\t\troomCode: roomCode,\r\n\t\t\t\t\t\tplayerName: playerName\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\r\n\tverifyProps = (props, Component) => {\r\n\t\tif (props === undefined){\r\n\t\t\treturn <Redirect to='/' />\r\n\t\t} else {\r\n\t\t\treturn <Component {...props}/>\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={HomeScreen} />\r\n\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/game/new\"\r\n\t\t\t\t\t\trender={ (routeProps) => {\r\n\t\t\t\t\t\t\tlet formData = {\r\n\t\t\t\t\t\t\t\t...routeProps.location.state,\r\n\t\t\t\t\t\t\t\troomCode: generateRoomCode(),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn this.joinLobby(formData, CREATE_AND_JOIN_LOBBY);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/game/:id/join\"\r\n\t\t\t\t\t\trender={(routeProps) => {\r\n\t\t\t\t\t\t\treturn this.joinLobby(routeProps.location.state, JOIN_LOBBY);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/game/:roomCode\"\r\n\t\t\t\t\t\trender={(routeProps) => this.verifyProps(routeProps.location.state, GameWrapper)}\r\n\t\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<Debug />\r\n\t\t\t\t\r\n\t\t\t</Router>\r\n\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Root;\r\n","import React, { Component } from \"react\";\r\nimport Root from \"./containers/Root\";\r\n\r\nexport class App extends Component {\r\n\trender() {\r\n\t\treturn <Root />;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","module.exports = {\r\n    PLAYER_ROLE: \"playerRole\",\r\n    NUMBERS_TASK: \"numberTask\",\r\n    DRAWING_TASK: \"drawingTask\",\r\n    QUESTION_TASK: \"questionTask\",\r\n    VOTE: 'vote',\r\n    FINAL_VOTE: 'finalVote',\r\n    ENDGAME: 'endGame',\r\n}","module.exports = {\r\n    IO_DISCONNECT: 'disconnect',\r\n    IO_DISCONNECTING: 'disconnecting',\r\n\r\n\r\n    CREATE_AND_JOIN_LOBBY: \"CREATE_AND_JOIN_LOBBY\",\r\n    \r\n    JOIN_LOBBY: \"JOIN_LOBBY\",\r\n    LEAVE_LOBBY: \"LEAVE_LOBBY\",\r\n    UPDATE_PLAYER_LIST: \"UPDATE_PLAYER_LIST\",\r\n    LOBBY_EXISTS: \"LOBBY_EXISTS\",\r\n    GET_PLAYER_LIST: \"GET_PLAYER_LIST\",\r\n\r\n    GET_LOBBY_SETTINGS: \"GET_LOBBY_SETTINGS\",\r\n    UPDATE_LOBBY_SETTINGS: \"UPDATE_LOBBY_SETTINGS\",\r\n    SUBMIT_LOBBY_SETTINGS: \"SUBMIT_LOBBY_SETTINGS\",\r\n\r\n\r\n    \r\n    PICK_IMPOSTERS: \"PICK_IMPOSTERS\",\r\n    GET_IMPOSTERS: \"GET_IMPOSTERS\",\r\n    START_GAME: \"START_GAME\",\r\n   \r\n\r\n    PICK_RANDOM_TASK: 'PICK_RANDOM_TASK',\r\n    SWITCH_SCREEN: 'SWITCH_SCREEN',\r\n    SEND_ANSWER: 'SEND_ANSWER',\r\n    SHOW_ANSWERS: 'SHOW_ANSWERS',\r\n    SEND_VOTES: 'SEND_VOTES',\r\n    SHOW_RESULTS: 'SHOW_RESULTS',\r\n    END_GAME: 'END_GAME',\r\n}"],"sourceRoot":""}